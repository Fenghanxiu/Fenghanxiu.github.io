{"meta":{"title":"OSA","subtitle":"Open Source","description":"","author":"Feng HanXiu","url":"https://space.bilibili.com/3546562577827916","root":"/3546562577827916/"},"pages":[{"title":"404","text":"","path":"404/index.html","date":"09-07","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"09-07","excerpt":""}],"posts":[{"title":"","text":"VSCode安装与配置指南1. VSCode简介VSCode是微软推出的一款轻量级编辑器，它本身仅是一个文本编辑器，并非集成开发环境（IDE）。几乎所有功能都通过插件扩展实现。因此，若要使用VSCode进行编程，除了下载VSCode外，还需安装对应编程语言的扩展及相关编译器。 2. 安装VSCode 进入VSCode官网：VSCode官网 点击红色圈出的区域，选择适合你操作系统的下载项。（注：stable是稳定版本，insider是内部测试版本，可能会有问题，建议选择stable） 下载完成后，得到安装程序，双击启动安装。 在安装过程中，建议只勾选以下两个选项： Add to PATH Register Code as an editor for supported file types 注意：安装路径最好是全英文且不包含中文字符，建议不要放在C盘。 安装完成后，打开VSCode，点击红色圈出的区域，在搜索框中分别搜索“C&#x2F;C++”和“Chinese”，安装C&#x2F;C++插件（必须有）和简体中文插件。 至此，VSCode的安装及必备插件安装完成，可以关闭VSCode。 3. 安装MinGW-w64 MinGW-w64是常用的C&#x2F;C++编译器之一，下载地址：MinGW-w64官网 下载后，双击安装程序进行安装。 在安装过程中，可以根据需求选择不同的选项： version：一般选择最新版本。 architecture：选择x86_64（64位系统）或i686（32位系统）。 threads：选择win32（开发Windows程序）或posix（开发其他操作系统程序）。 exception：推荐选择seh（64位系统）或dwarf（32位系统）。 build revision：默认值即可。 安装路径应为纯英文且不包含空格。 下载可能需要较长时间，请耐心等待。安装完成后可删除安装包。 4. 设置系统环境变量参考文章：设置系统环境变量 右击“此电脑”——选择“属性”——点击“高级系统设置”——进入“环境变量”。 在“系统变量”中找到“Path”条目，点击“编辑”——“新建”——将MinGW-w64的路径（例如C:\\TDM-GCC-64\\bin）复制到新条目中。 点击“确定”保存设置。 打开命令提示符（在Windows搜索框中输入cmd），输入gcc -v并回车。如果显示编译器版本信息，则说明环境变量设置成功。 5. 设置VSCode里的环境参考文章： VSCode C&#x2F;C++ 配置 VSCode C++ 配置 (1). 配置编译器（生成 c_cpp_properties.json 文件） 创建一个用于存放代码的文件夹（建议使用英文名），在VSCode中打开该文件夹。 按下快捷键 Shift+Ctrl+P，在全局命令面板中搜索并选择“C&#x2F;C++ Edit Configurations (UI)”。 在生成的 .vscode 文件夹下找到 c_cpp_properties.json 文件，配置编译器路径和 IntelliSense 模式： compilerPath：填写你的编译器下载路径。 IntelliSense Mode：设置为 gcc-x64。 (2). 配置构建任务（生成 tasks.json 文件） 点击“文件——新建文件”，输入一段简单的测试代码，并保存为 .cpp 格式（注意文件后缀）。 按快捷键 Ctrl+Shift+P 调出命令面板，输入 tasks，选择“Tasks: Configure Default Build Task”，然后选择“C&#x2F;C++: g++.exe build active file”。 这将生成一个 tasks.json 文件，其内容无需修改（参见相关参考文章）。 (3). 配置调试设置（生成 launch.json 文件） 在测试代码文件中，点击菜单栏的“Debug——Start Debugging”或“运行——启动调试”。 选择“C++ (GDB&#x2F;LLDB)”，然后选择“g++.exe build active file”。 这将生成一个 launch.json 文件，其内容无需修改（参见相关参考文章）。 至此，VSCode的安装及C&#x2F;C++环境配置（Windows系统）完成。 6. 其他相关点 建议配置成功后备份 .vscode 文件夹，以便日后直接复制使用，无需重新配置。 因为VSCode在执行完程序后会退出，可以在代码中添加 system(&quot;pause&quot;) 或 getchar()，并将 launch.json 文件中的 &quot;externalConsole&quot; 项的值改为 true，以便查看外部控制台（默认是 false）。 在步骤5.(2)中新建文件时，如果是点击图示位置创建的，务必记得添加文件后缀名（例如 .cpp），否则可能会出现错误。 不建议直接复制他人的 JSON 文件来完成环境配置，以免出错，同时也不利于自己掌握配置过程。 如果安装编译器并配置完成后出现“检测到 #include 错误。请更新 includePath”的问题，请参考 解决方案。","path":"2024/09/11/VSCode安装与配置指南/","date":"09-11","excerpt":"","tags":[]},{"title":"嘉立创免费打板教程","text":"一、前言在此之前先介绍一下嘉立创这家公司，嘉立创是一家成立于2006年的高新技术企业，它专注于多个领域，包括PCB打样、激光钢网、SMT贴片、3D打印、CNC金属加工、钣金加工等。 立创平台会给大家很多福利：每月两次的PCB打样（5片）机会，以及每月两次的一元CNC服务，3D打印优惠卷，电子元件优惠卷等。 嘉立创旗下的EDA设计软件（电路板绘制）、下单助手，立创开源广场和立创商城等，之后都会给大家提供很多帮助，大家可以详细了解一下。 今天教给大家的是白嫖嘉立创的PCB打样 二、基础知识介绍首先给大家介绍一下PCB是什么PCB（ Printed Circuit Board），中文名称为印制电路板，又称印刷线路板，是重要的电子部件，是电子元器件的支撑体，是电子元器件电气连接的载体。由于它是采用电子印刷术制作的，故被称为“印刷”电路板。其主要功能是使各种电子元器组件通过电路进行连接，起到导通和传输的作用，是电子产品的关键电子互连件。几乎每种电子设备都离不开印制电路板，因为其提供各种电子元器件固定装配的机械支撑、实现其间的布线和电气连接或电绝缘、提供所要求的电气特性，其制造品质直接影响电子产品的稳定性和使用寿命，并且影响系统产品整体竞争力，有“电子产品之母”之称。 你见到的几乎所有（大部分）需要用到电的物品内部都有着电路板的存在 电路板有黑白丝印和彩色丝印之分，丝印就是在电路板表面可以看到的标志，图片或文字。 嘉立创每月两次的免费PCB打样只支持黑白丝印，而彩色丝印需要额外50元活或者这张优惠卷 作品展示 彩色丝印卷可以在一些活动中获得，关注嘉立创eda公众号时刻关注。 三、正式教程那么现在正式开始教大家白嫖 1.进入 -下载客户端-选择适配自己电脑系统的文件下载（嘉立创EDA专业版）https://pro.lceda.cn/这个是嘉立创EDA的下载网站，嘉立创EDA是电路板的绘制工具 2.下载下单助手https://www.jlc.com/portal/appDownloadsWithConfig.html https://oshwhub.com/（这个是立创开源平台的网址，在这个上面你可以看到很多大佬开源的作品（电脑，手机，投影仪，牙刷，手表，机器人等） 这里输入梵高（要登录) 3.搜索后，页面跳转，点击第一个 4.点击编辑器打开 5.点击PCB(可能有点慢，需要等待) 6.点击导出PCB制板文件 7.导出Gerber文件会自动下载到你的Downloads中，你可以在此电脑–Downloads中找到 8点开嘉立创下单助手（刚刚下的软件) 9.领取一张：1-4层喷锡EDA专用券点击用户中心–优惠卷中心–免费卷领取 10.选择优惠卷 11.配置 板子数量选5 填写工艺 发票处不需要写，地址和联系方式填写自己的（成都理工大学）下单–支付 支付金额是0元 12.可以查看订单信息 四、结语期间需要选择路径，解压缩，注册账号等操作，如有不会，可以在群里询问请教学长学姐","path":"2024/09/08/嘉立创免费打板教程/","date":"09-08","excerpt":"","tags":[]},{"title":"test","text":"","path":"2024/09/07/test/","date":"09-07","excerpt":"","tags":[]},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","path":"2024/09/06/hello-world/","date":"09-06","excerpt":"","tags":[]}],"categories":[],"tags":[]}