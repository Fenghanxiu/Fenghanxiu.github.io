{"meta":{"title":"OSA","subtitle":"Open Source","description":"","author":"Feng HanXiu","url":"http://example.com","root":"/"},"pages":[{"title":"404","text":"","path":"404/index.html","date":"09-07","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"09-07","excerpt":""},{"title":"VSCode安装与配置指南","text":"VSCode安装与配置指南1. VSCode简介VSCode是微软推出的一款轻量级编辑器，它本身仅是一个文本编辑器，并非集成开发环境（IDE）。几乎所有功能都通过插件扩展实现。因此，若要使用VSCode进行编程，除了下载VSCode外，还需安装对应编程语言的扩展及相关编译器。 2. 安装VSCode 进入VSCode官网：VSCode官网 点击红色圈出的区域，选择适合你操作系统的下载项。（注：stable是稳定版本，insider是内部测试版本，可能会有问题，建议选择stable） 下载完成后，得到安装程序，双击启动安装。 在安装过程中，建议只勾选以下两个选项： Add to PATH Register Code as an editor for supported file types 注意：安装路径最好是全英文且不包含中文字符，建议不要放在C盘。 安装完成后，打开VSCode，点击红色圈出的区域，在搜索框中分别搜索“C&#x2F;C++”和“Chinese”，安装C&#x2F;C++插件（必须有）和简体中文插件。 至此，VSCode的安装及必备插件安装完成，可以关闭VSCode。 3. 安装MinGW-w64 MinGW-w64是常用的C&#x2F;C++编译器之一，下载地址：MinGW-w64官网 下载后，双击安装程序进行安装。 在安装过程中，可以根据需求选择不同的选项： version：一般选择最新版本。 architecture：选择x86_64（64位系统）或i686（32位系统）。 threads：选择win32（开发Windows程序）或posix（开发其他操作系统程序）。 exception：推荐选择seh（64位系统）或dwarf（32位系统）。 build revision：默认值即可。 安装路径应为纯英文且不包含空格。 下载可能需要较长时间，请耐心等待。安装完成后可删除安装包。 4. 设置系统环境变量参考文章：设置系统环境变量 右击“此电脑”——选择“属性”——点击“高级系统设置”——进入“环境变量”。 在“系统变量”中找到“Path”条目，点击“编辑”——“新建”——将MinGW-w64的路径（例如C:\\TDM-GCC-64\\bin）复制到新条目中。 点击“确定”保存设置。 打开命令提示符（在Windows搜索框中输入cmd），输入gcc -v并回车。如果显示编译器版本信息，则说明环境变量设置成功。 5. 设置VSCode里的环境参考文章： VSCode C&#x2F;C++ 配置 VSCode C++ 配置 (1). 配置编译器（生成 c_cpp_properties.json 文件） 创建一个用于存放代码的文件夹（建议使用英文名），在VSCode中打开该文件夹。 按下快捷键 Shift+Ctrl+P，在全局命令面板中搜索并选择“C&#x2F;C++ Edit Configurations (UI)”。 在生成的 .vscode 文件夹下找到 c_cpp_properties.json 文件，配置编译器路径和 IntelliSense 模式： compilerPath：填写你的编译器下载路径。 IntelliSense Mode：设置为 gcc-x64。 (2). 配置构建任务（生成 tasks.json 文件） 点击“文件——新建文件”，输入一段简单的测试代码，并保存为 .cpp 格式（注意文件后缀）。 按快捷键 Ctrl+Shift+P 调出命令面板，输入 tasks，选择“Tasks: Configure Default Build Task”，然后选择“C&#x2F;C++: g++.exe build active file”。 这将生成一个 tasks.json 文件，其内容无需修改（参见相关参考文章）。 (3). 配置调试设置（生成 launch.json 文件） 在测试代码文件中，点击菜单栏的“Debug——Start Debugging”或“运行——启动调试”。 选择“C++ (GDB&#x2F;LLDB)”，然后选择“g++.exe build active file”。 这将生成一个 launch.json 文件，其内容无需修改（参见相关参考文章）。 至此，VSCode的安装及C&#x2F;C++环境配置（Windows系统）完成。 6. 其他相关点 建议配置成功后备份 .vscode 文件夹，以便日后直接复制使用，无需重新配置。 因为VSCode在执行完程序后会退出，可以在代码中添加 system(&quot;pause&quot;) 或 getchar()，并将 launch.json 文件中的 &quot;externalConsole&quot; 项的值改为 true，以便查看外部控制台（默认是 false）。 在步骤5.(2)中新建文件时，如果是点击图示位置创建的，务必记得添加文件后缀名（例如 .cpp），否则可能会出现错误。 不建议直接复制他人的 JSON 文件来完成环境配置，以免出错，同时也不利于自己掌握配置过程。 如果安装编译器并配置完成后出现“检测到 #include 错误。请更新 includePath”的问题，请参考 解决方案。","path":"VSCode安装与配置指南.html","date":"09-11","excerpt":""}],"posts":[{"title":"2024开源蓝桥系列（二）：基础外设（LED，蜂鸣器，继电器）学习","text":"前言学习单片机（如C51和STM32）时，控制LED灯通常是第一个项目。这一基础项目不仅象征着新的学习阶段的开始，也是深入理解单片机工作原理的关键。通过掌握LED控制，学生可以更好地理解数字信号输出、IO口控制及基本电路连接。这为后续学习更复杂的单片机应用打下了坚实的基础，例如显示系统、指示灯和信号传输等应用场景。 序言：基础知识1.LED是什么，怎么控制(1)元器件介绍发光二极管，简称为LED，是一种常用的发光器件，其特点是单向导通，意思就是在LED两端形成压差，就能够使得LED发光。 二极管的特点是单向导电性，电流只允许从一个方向通过，二极管当中的正向电流从无色环流向有色环当中。LED亮度的颜色和工作电压根据所选择的发光二极管来决定，越鲜艳的颜色二极管的工作电压也就越高。 (2)控制原理对LED来说，亮灯的条件是两端有电势差。 下图为LED的符号图：当LED灯的正极接正电压，负极接负电压或接地时，LED便能够发光。 2.继电器是什么，怎么控制(1)元器件介绍继电器，开关电器的一种，在控制电路中用的非常多： 继电器是一种电控制器件,可以给予规定输入量并保持足够长的时间,在电气输出电路中使被控量发生预定的阶跃变化。当输入量降至一定程度并保持足够长的时间后，再恢复到初始状态。（弱电控制强电） 它具有控制系统(又称输入回路)和被控制系统(又称输出回路)之间的互动关系。 通常应用于自动化的控制电路中，它实际上是用小电流去控制大电流运作的一种“自动开关”。故在电路中起着自动调节、安全保护、转换电路等作用。 (2)控制原理当RELAY接上低电平0时，继电器闭合。 3.蜂鸣器是什么，怎么控制(1)元器件介绍蜂鸣器的发声原理由振动装置和谐振装置组成，而蜂鸣器又分为无源他激型与有源自激型，蜂鸣器的发声原理为: 1、无源他激型蜂鸣器的工作发声原理是：方波信号输入谐振装置转换为声音信号输出。 2、有源自激型蜂鸣器的工作发声原理是：直流电源输入经过振荡系统的放大取样电路在谐振装置作用下产生声音信号。 3.有源蜂鸣器和无源蜂鸣器的主要差别是：二者对输入信号的要求不一样，有源蜂鸣器工作的理想信号是直流电，一般标示为VDD、VDC等。因为蜂鸣器内部有一个简单的振荡电路，可以把恒定的直流电转变成一定频率的脉冲信号，从而产生磁场交变，带动钼片振动发出声音。 (2)控制原理BUZZ接上低电平0，则蜂鸣器鸣叫。 一、总体介绍LED（发光二极管）作为一种常见的光电器件，在单片机学习中广泛应用。掌握LED的工作原理和控制方法，可以帮助学生理解单片机如何与外部设备进行交互。此外，LED学习还有助于培养学生对数字信号输出和硬件控制的基本概念，是单片机编程入门的重要步骤。 二、硬件部分 74HC138译码器 原理图：74HC138的电路图展示了其输入和输出端的连接关系。 功能：74HC138是一种3-8译码器，它能够将三位地址码（C、B、A 上图中）转换为八个输出端口。根据输入的地址码，译码器会选定一个输出端口为低电平，其他输出端口则为高电平，这种选择性控制是实现复杂电路的基础。 真值表：真值表详细列出了不同输入条件下的输出状态，使得理解译码器的工作原理更加直观。 使用： 引脚重映射：通过使用sbit关键字重新定义引脚名称，使得代码更加清晰，便于后续的操作和调试。 锁存器选择：通过特定的函数控制译码器的输出通道，从而实现不同锁存器的选择，这有利于对多通道的控制。 SN74HC02DRG4四路二输入或非门 原理图：此部分展示了四个或非门的连接图。 功能：SN74HC02是一种常用的数字逻辑芯片，主要用于执行或非 (NOR) 逻辑运算。它的输出状态可以有效控制连接的锁存器是否工作，从而实现更复杂的逻辑功能。 74HC573锁存器 原理图：展示了74HC573锁存器的连接方式及工作原理。 功能：74HC573锁存器主要用于数据存储和输出控制。当时钟信号到达时，锁存器会将输入的数据输出到相应的引脚，实现对数据流的有效管理。此外，它还支持并行数据传输，这对于处理多条数据信号非常重要。 使用：通过对P0引脚进行赋值，可以控制锁存器的输出状态。例如，当需要使Q1输出高电平时，可以直接通过赋值来实现。 三、片选和点亮一个 LED如下是蓝桥杯单片机上的LED模块的电路图。要实现LED灯的点亮，必须先确保选中LED相关的锁存器，在给相应LED低电平。以下是实现点亮L1灯的代码示例： 123456789101112131415#include &lt;STC15F2K60S2.H&gt; // 引入单片机头文件void HC138_Init(unsigned char channel) &#123; P2 = P2 &amp; 0x1f | channel &lt;&lt; 5; P2 &amp;= 0x1f;&#125;void main(void) &#123; P0 = 0xfe; HC138_Init(4); while(1) &#123; &#125;&#125; 在这段代码中，首先引入了相关头文件，先配置LED电平即1111 1110，然后通过HC138_Init()函数配置译码器的输出通道。 四、蜂鸣器和继电器蜂鸣器和继电器实现思路和LED类似，图中的N_BUZZ和N_RELAY分别为蜂鸣器和继电器，ULN2003会将电平取反，所以蜂鸣器和继电器均为P0端输入高电平触发。功能：打开蜂鸣器和继电器，代码如下： 123456789101112131415#include &lt;STC15F2K60S2.H&gt; // 引入单片机头文件void HC138_Init(unsigned char channel) &#123; P2 = P2 &amp; 0x1f | channel &lt;&lt; 5; P2 &amp;= 0x1f;&#125;void main(void) &#123; P0 = 0x50; HC138_Init(5); while(1) &#123; &#125;&#125; 五、流水灯流水灯功能的实现使得L1至L8灯依次点亮和熄灭，形成动态的灯光效果。实现流水灯的基本思路如下： 使用循环结构和延时函数，控制LED灯依次亮起和熄灭。例如，可以通过一个for循环，结合延时函数，让每个LED灯在一定时间内保持亮状态。在这里用到stc-isp下载器预设的软件延时函数，并对其做了一定的修改，在学习定时器之前可以这么对程序进行延时操作。 在程序运行前，我们一般要求系统LED全灭，蜂鸣器和继电器不工作，所以会有Init_system(void)的函数，涉及蜂鸣器和继电器后面会讲到，流水灯代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152#include &lt;STC15F2K60S2.H&gt;void Delay(unsigned int t) //@12.000MHz&#123; unsigned char i, j; while (t--) &#123; i = 12; j = 169; do &#123; while (--j); &#125; while (--i); &#125;&#125;void HC138_Init(unsigned char channel) &#123; P2 = P2 &amp; 0x1f | channel &lt;&lt; 5; P2 &amp;= 0x1f;&#125;void Init_system(void) &#123; P0 = 0xff; HC138_Init(4); P0 = 0x00; HC138_Init(5);&#125;void main() &#123; unsigned char i; Init_system(); while (1) &#123; for (i=0; i&lt;9; i++) &#123; P0 = ~(0x01 &lt;&lt; i); HC138_Init(4); Delay(500); &#125; for (i=0; i&lt;9; i++) &#123; P0 = ~(0x80 &gt;&gt; i); HC138_Init(4); Delay(500); &#125; &#125;&#125; 六、代码纯享版12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970/* 演示效果 led来回以0.5秒为间隔展示流水灯 最后led熄灭蜂鸣器鸣响1秒 接着蜂鸣器关闭，继电器闭合1秒*/#include &lt;STC15F2K60S2.H&gt;void Delay(unsigned int t) //@12.000MHz&#123; unsigned char i, j; while (t--) &#123; i = 12; j = 169; do &#123; while (--j); &#125; while (--i); &#125;&#125;void HC138_Init(unsigned char channel) &#123; P2 = P2 &amp; 0x1f | channel &lt;&lt; 5; P2 &amp;= 0x1f;&#125;void Init_system(void) &#123; P0 = 0xff; HC138_Init(4); P0 = 0x00; HC138_Init(5);&#125;void main() &#123; unsigned char i; Init_system(); while (1) &#123; for (i=0; i&lt;9; i++) &#123; P0 = ~(0x01 &lt;&lt; i); HC138_Init(4); Delay(500); &#125; for (i=0; i&lt;9; i++) &#123; P0 = ~(0x80 &gt;&gt; i); HC138_Init(4); Delay(500); &#125; P0 = 0x40; HC138_Init(5); Delay(1000); P0 = 0x10; HC138_Init(5); Delay(1000); P0 = 0x00; HC138_Init(5); &#125;&#125;","path":"2024/11/05/2024开源蓝桥系列（二）：基础外设（LED，蜂鸣器，继电器）学习/","date":"11-05","excerpt":"","tags":[]},{"title":"2024开源蓝桥系列（一）：单片机基础知识，常用电脑操作，电子类比赛介绍","text":"01 单片机介绍一.单片机是什么？单片机是一种集成电路芯片，是采用超大规模集成电路技术把具有数据处理能力的中央处理器CPU、随机存储器RAM、只读存储器ROM、多种I&#x2F;O口和中断系统、定时器&#x2F;计数器等功能（可能还包括显示驱动电路、脉宽调制电路、模拟多路转换器、A&#x2F;D转换器等电路）集成到一块硅片上构成的一个小而完善的微型计算机系统【和计算机相比，单片机只缺少了I&#x2F;O设备（鼠标、键盘、显示器、打印机等）】通常将单片机称为微型控制器（MicroControllerUnit，MCU）在工业控制领域广泛应用。 &#x3D;&#x3D;PS:单片机是一个芯片，单片机开发板是一个电路板&#x3D;&#x3D; 各种单片机开发板 二.单片机的主要内部资源1. 中央处理器 中央处理器是单片机的核心，完成运算和控制功能。其结构复杂，但在编写程序时采用C语言，无需深入了解其内部结构和原理。 2. 单片机用户可使用的资源 ROM(Flash) - 程序存储空间，早期单片机使用OTPROM。 RAM - 数据存储空间。 SFR - 特殊功能寄存器。 (1) ROM(Flash) - 程序存储空间在早期的单片机中，主要是用 OTPROM（One Time Programmable Read-Only Memory，即一次可编程只读存储器）来存储单片机的程序，程序只能写入一次，如果发现错了，没办法，只能换一片，重新写入了。随着技术的发展，Flash 以其可重复擦写且容量大成本低的优点成为现在绝大多数单片机的程序存储器。对于单片机来说 Flash 最大的意义是断电后数据不丢失，这个概念类似于我们电脑的硬盘，我们保存了电影、文档、音乐等文件，把电源关掉后，下次重新开电脑，所有的文件都还照样存在。 (2) RAM - 数据存储空间RAM 是单片机的数据存储空间，用来存储程序运行过程中产生的和需要的数据，跟电脑的内存是相似的概念，其实最典型的比喻是我的计算器，我们用计算器计算个加减法，一些中间的数据都会保存在 RAM 里边，关电后数据丢失，所以我们每次打开计算器，都是从归零开始计算。 优点: 第一是读写速度非常快 第二是理论上是可无限次写入的，即寿命无限，不管程序怎么运行怎么读写它都不会坏。 (3) SFR - 特殊功能寄存器这个概念大家可能刚开始理解不了，但是一定要记住。单片机有很多很多功能，每个功能都会对应一个或多个 SFR，我们就是通过对 SFR 的读写来实现单片机的多种多样的功能的。 三.单片机最小系统单片机最小系统，也叫做单片机最小应用系统，是指用最少的原件组成单片机可以工作的系统。单片机最小系统的三要素就是电源、晶振、复位电路。 1. 电源这个很好理解，电子设备都需要供电。目前主流单片机的电源分为 5V 和 3.3V 这两个标准。 蓝桥杯单片机开发板需要 5V 的供电系统，通过usb电脑供电与下载程序。 2. 晶振晶振，又叫晶体振荡器，从这个名字我们就可以看出来，它注定一生都要不停振荡的。他起到的作用是为单片机系统提供基准时钟信号，类似于我们部队训练时喊口令的人，单片机内部所有的工作都是以这个时钟信号为步调基准来进行工作的。 蓝桥杯单片机开发板晶振频率为12M。 3. 复位电路 单片机要进行一个内部的初始化过程，这个过程就可以理解为上电复位，上电复位保证单片机每次都从一定的相同的状态开始工作。这个过程跟我们打开电脑电源开电脑的过程是一致的。 当我们的程序运行时，如果遭受到意外干扰而导致程序死机，或者程序跑飞的时候，我们就可以按下一个复位按键，让程序重新初始化重新运行，这个过程就叫做手动复位，最典型的就是我们电脑的重启按钮，单片机的RESET。 四.单片机开发板外设 电路板 - 躯体 电流（来自电源） - 血液 电流（来自单片机） - 神经信号 单片机 - 大脑 传感器 - 感觉神经 执行器 - 运动神经 蓝桥杯开发板外设一览： 蓝桥杯考察重点 LED 按键（独立按键，矩阵按键） 数码管 蜂鸣器 定时器 定时器中断 串口通信 继电器 IIC总线 - EEPROM SPI时序 - 实时时钟DS1302 DS18B20温度传感器 ADC DAC 超声波 N555 02 计算机常用操作 此电脑 - 开始 → 设置 → 个性化 → 主题 → 桌面图标设置 分卷 存储空间设置 - 开始 → 设置 → 系统 → 存储 → 高级存储设置 → 保存新内容位置；安装软件时自定义安装空间 WIN键 - 任务管理器、设备管理器 遇到卡死 - 任务管理器结束任务；系统 → 开发者选项 → 启动结束任务 文件格式 - .ppt .txt .word .jpg .png .mp3 .zip .7z .rar等 解压缩 - 使用解压软件打开 .7z .zip .rar 等文件 文件与文件夹 - QQ可发送文件，无法直接发送文件夹（需将文件夹压缩为压缩包后发送）；QQ每天免费下载加速2G 安装和卸载（Uninstall） 截图 - 搜索截图工具；Fn+Prtsc&#x2F;Print → Ctrl+V；Ctrl+Alt+A 03 常用网站、软件推荐工具 网易有道翻译 - https://youdaotranslate.com Typora（文本记录，博客编写） 砚湖易办教育版软件下载 微信公众号 “今日工作室” - 提供常用电脑软件 常用网站 B站：https://www.bilibili.com | 开源协会：https://space.bilibili.com/3546562577827916 CSDN：https://www.csdn.net Github：https://github.com 开源协会博客：https://fenghanxiu.github.io 菜鸟编程：https://www.runoob.com 博客园：博客园 - 开发者的网上家园 电子发烧友：电子发烧友网 隐藏推荐 PotPlayer（万能音视频播放器）： IDM（多线程下载器）： 科学上网：https://ikuuu.pw/user zilibaray（全球最大开源电子书平台，买书之前先来这搜搜有没有电子版）：Z-library 项目 - 官方 Z-lib. 免费下载电子书（一直在变，失效请自行搜索） OCS 网课助手脚本（大学生救星，学习通，MOOC自动刷题，高倍速刷视频）：使用教程 | OCS网课助手 Google，火狐浏览器： 格式工厂（多种格式转换）： 万彩办公大师（office万能助手，好用，狗都不用wps）： Sourcetree（Github可视化管理工具）： qBittorrent（磁链下载）： 04 电子类比赛介绍，问题解答1. 蓝桥杯比赛单片机赛道（2024年情况，仅供参考） 题目：15道1分选择题（电路分析、模电、数电、微机原理等）+ 1道85分编程题 流程：早九点到综合实验楼 → 做题 → 最迟下午两点交卷（网上答卷，提交工程文件，可提前交卷）【不能联网、带U盘】 2. 学习规划（仅供参考） 3. 主要比赛（仅供参考）","path":"2024/10/31/2024开源蓝桥系列（一）：单片机基础知识，常用电脑操作，电子类比赛介绍/","date":"10-31","excerpt":"","tags":[]},{"title":"蓝桥杯单片机赛道入门问题解答","text":"蓝桥杯单片机赛道入门问题解答1. 蓝桥杯是什么蓝桥杯是国家级的甲级比赛，赛制为单人赛，涵盖多个与编程相关的赛道。软件组主要侧重算法，硬件组则关注硬件编程。单片机赛道为15，嵌入式赛道为32，本质上二者都是基于单片机开发。此外，还有EDA制图。开源协会负责硬件组的单片机赛道（即15单片机开发）。 2. 蓝桥杯单片机赛道的比赛形式比赛中，官方提供单片机开发板，限时5小时，分为主观题和客观题： 客观题：不定向选择题，满分为15分。 主观题：根据题目要求编写程序，让单片机实现指定功能。代码需上传至指定平台进行评测，满分85分。 3. 如何准备 客观题：涉及电路分析、模电、数电及单片机的理论知识。 主观题：主要是编写单片机程序，这是我们重点练习的内容。 4. 什么是单片机单片机（MicroController Unit, MCU）是一种将CPU、RAM、ROM、定时&#x2F;计数器及输入&#x2F;输出接口（I&#x2F;O接口）等计算机主要功能集成在一块芯片上的微型计算机。简而言之，单片机是开发板上的核心芯片，它可以通过烧录代码上电自动运行预定程序。 单片机技术在现代工业自动化、电子电气、通信及物联网等领域具有广泛应用。随着智能化和自动化程度的提高，单片机已经渗透到我们生活的每一个角落，从家电到公共设施，单片机无处不在。此外，单片机技术也是学习更高级技术如ARM嵌入式系统和FPGA设计的基础。 5. 15单片机和51单片机的区别51单片机是较早的技术，而15单片机可以看作是51的增强版，二者的基本结构相似，开发方式也基本一致。因此，很多51单片机的教程可以用于15单片机，尽管头文件有所区别。 6. 蓝桥杯单片机主观题考察内容简要来说，主观题考察以下几点： 外设的独立运行：确保外设模块能够独立运行。 多外设综合运行：多外设同时运行且不产生冲突。 优化性能：提升代码的运行效率与可靠性。 学习路线建议一切的基础，&#x3D;&#x3D;先搞到一块板子&#x3D;&#x3D;，具体购买方式可以查看群精华 前期：打好C语言基础，逐个学习外设模块的原理并编写代码实现功能。同时培养看电路图和查阅手册的能力。 中期：通过练习往年真题，学习如何整合多个模块并确保它们不冲突。 后期：优化代码逻辑，刷题，准备个人的代码模板，并复习客观题内容。 主要考点： 7. 学习资源基础篇 跟随开源协会的培训内容，包括PPT、历年教程、B站录播视频和博客。不过，这些只能算是入门，还需要个人多加练习。 视频 51单片机： 江协科技（非常详细的51单片机教程） 51单片机入门教程-2020版 程序全程纯手打 从零开始入门_哔哩哔哩_bilibili 15单片机： 小蜜蜂老师的干货铺（速成类教程，讲解通俗，适合入门，但是后续继续提升需要学习其他的知识） 【小蜜蜂笔记】蓝桥杯大赛-单片机设计与开发基础技能与进阶强化教程_哔哩哔哩_bilibili 小叶好想爱学习（开源协会老学长的教程） https://www.bilibili.com/video/BV1N7411g7Mj/?spm_id_from=333.337.search-card.all.click Alice_西风（同样推荐的蓝桥杯系统性教学视频，相比之前两个更加细致，并有许多真题讲解） Alice_西风的个人空间-Alice_西风个人主页-哔哩哔哩视频 (bilibili.com) 书籍 《手把手教你学51单片机》：适合新手的入门教材，除了单片机编程，还涉及数电、模电、C语言和算法逻辑，讲解深入浅出，非常推荐。 提升篇 视频： -机械狗-（适合掌握基础模块后进一步提升，UP主也是开源协会的老学长） 【蓝桥杯单片机 第I季】1.2.3.一套”简单“的代码逻辑_哔哩哔哩_bilibili 其他资源 CSDN：中国软件开发者社区，适合编程新手，几乎所有与蓝桥杯相关的问题都能找到相关博客解答。 学长代码模板：参考优秀学长的代码，取其精华，化为己用。 官方：蓝桥杯官网也提供了大量的学习资料与课程，可以前去下载 学习建议实践为主，理论结合。开始时可以模仿代码，不理解也没关系，后续通过查阅资料或者询问学长逐步理解。最终做到温故而知新，确保理论与实践并行，硬件开发中千万不能将代码与硬件分离。","path":"2024/10/16/蓝桥杯单片机赛道入门问题解答/","date":"10-16","excerpt":"","tags":[]},{"title":"VSCode安装与配置指南","text":"VSCode安装与配置指南1. VSCode简介VSCode 是微软推出的一款轻量级编辑器，它本身仅是一个文本编辑器，并非集成开发环境（IDE）。几乎所有功能都通过插件扩展实现。因此，若要使用VSCode进行编程，除了下载 VSCode 外，还需安装对应编程语言的扩展及相关编译器。 2. 安装VSCode 进入 VSCode 官网：VSCode官网 点击红色圈出的区域，选择适合你操作系统的下载项。（注：stable是稳定版本，insider是内部测试版本，可能会有问题，建议选择stable） 下载完成后，得到安装程序，双击启动安装。 在安装过程中，建议只勾选以下两个选项： Add to PATH Register Code as an editor for supported file types 注意：安装路径最好是全英文且不包含中文字符，建议不要放在C盘。 安装完成后，打开 VSCode ，点击红色圈出的区域，在搜索框中分别搜索“C&#x2F;C++”和“Chinese”，安装 C&#x2F;C++ 插件（必须有）和简体中文插件。安装中文插件完毕时，右下角会提示重启 Vscode 更换语言，点击Restart以更换语言。 至此，VSCode 的安装及必备插件安装完成，可以关闭 VSCode 。 3. 安装MinGW-w64 MinGW-w64 是常用的 C&#x2F;C++ 编译器之一，下载地址：MinGW-w64官网 下载后，双击安装程序进行安装。 在安装过程中，可以根据需求选择不同的选项： version：一般选择最新版本。 architecture：选择x86_64（64位系统）或i686（32位系统）。 threads：选择win32（开发Windows程序）或posix（开发其他操作系统程序）。 exception：推荐选择seh（64位系统）或dwarf（32位系统）。 build revision：默认值即可。 安装路径应为纯英文且不包含空格。 下载可能需要较长时间，请耐心等待。安装完成后可删除安装包。 4. 设置系统环境变量参考文章：设置系统环境变量 右击“此电脑”——选择“属性”——点击“高级系统设置”——进入“环境变量”。 在“系统变量”中找到“Path”条目，点击“编辑”——“新建”——将 mingw64 文件夹下 bin 文件夹的路径（例如C:\\Programe Files\\mingw64\\bin）复制到新条目中。 点击“确定”保存设置。 打开命令提示符（快捷键win+r并在搜索框中输入cmd，或者直接在 Windows 开始界面直接搜索“命令提示符”），输入gcc -v并回车。如果显示编译器版本信息，则说明环境变量设置成功；或者输入where gcc并回车。如果显示gcc的文件具体位置， 则说明环境变量设置成功。 5. 设置VSCode里的环境参考文章： VSCode C&#x2F;C++ 配置 VSCode C++ 配置 (1). 配置构建任务（生成 tasks.json 文件） 点击“文件——新建文件”，输入一段简单的测试代码，并保存为 .c 格式（注意文件后缀）。 按快捷键 Ctrl+Shift+P 调出命令面板，输入 tasks，选择“Tasks: Configure Default Build Task”，然后选择“C&#x2F;C++: gcc.exe build active file”。 这将生成一个 tasks.json 文件，其内容无需修改（参见相关参考文章）。 (2). 配置调试设置（生成 launch.json 文件） 在测试代码文件中，点击菜单栏的“Debug——Start Debugging”或“运行——启动调试”。 选择“C++ (GDB&#x2F;LLDB)”，然后选择“gcc.exe build active file”。 这将生成一个 launch.json 文件，其内容无需修改（参见相关参考文章）。 至此，VSCode的安装及C&#x2F;C++环境配置（单文件运行与调试）（Windows系统）完成。（多文件运行与调试请参考 6.1 ） 6. 其他相关点 此时配置的 Vscode 只能进行单文件的运行与调试，想进行多文件运行与调试可以参考如下图配置 tasks.json 和 launch.json 文件。此时运行模式从执行当前文件改为执行当前文件夹下所有可执行文件（.c 格式文件），并生成唯一的 a.exe。（多文件运行与调试结果示例） 建议配置成功后备份 .vscode 文件夹，以便日后直接复制使用，无需重新配置。 因为 VSCode 自带的终端会显示程序运行的结果，不必担心程序运行完直接退出而看不到结果的问题（如下图）。若担心执行完程序后会退出，可以在代码中添加 system(&quot;pause&quot;) 或 getchar()，并将 launch.json 文件中的 &quot;externalConsole&quot; 项的值改为 true，以便查看外部控制台（默认是 false）。 在步骤5.(2)中新建文件时，如果是点击图示位置创建的，务必记得添加文件后缀名（例如 .c），否则可能会出现错误。 不建议直接复制他人的 JSON 文件来完成环境配置，以免出错，同时也不利于自己掌握配置过程。 如果安装编译器并配置完成后出现“检测到 #include 错误。请更新 includePath”的问题，请参考 解决方案。","path":"2024/09/11/VSCode安装与配置指南/","date":"09-11","excerpt":"","tags":[]},{"title":"嘉立创免费打板教程","text":"一、前言在此之前先介绍一下嘉立创这家公司，嘉立创是一家成立于2006年的高新技术企业，它专注于多个领域，包括PCB打样、激光钢网、SMT贴片、3D打印、CNC金属加工、钣金加工等。 立创平台会给大家很多福利：每月两次的PCB打样（5片）机会，以及每月两次的一元CNC服务，3D打印优惠卷，电子元件优惠卷等。 嘉立创旗下的EDA设计软件（电路板绘制）、下单助手，立创开源广场和立创商城等，之后都会给大家提供很多帮助，大家可以详细了解一下。 今天教给大家的是白嫖嘉立创的PCB打样 二、基础知识介绍首先给大家介绍一下PCB是什么PCB（ Printed Circuit Board），中文名称为印制电路板，又称印刷线路板，是重要的电子部件，是电子元器件的支撑体，是电子元器件电气连接的载体。由于它是采用电子印刷术制作的，故被称为“印刷”电路板。其主要功能是使各种电子元器组件通过电路进行连接，起到导通和传输的作用，是电子产品的关键电子互连件。几乎每种电子设备都离不开印制电路板，因为其提供各种电子元器件固定装配的机械支撑、实现其间的布线和电气连接或电绝缘、提供所要求的电气特性，其制造品质直接影响电子产品的稳定性和使用寿命，并且影响系统产品整体竞争力，有“电子产品之母”之称。 你见到的几乎所有（大部分）需要用到电的物品内部都有着电路板的存在 电路板有黑白丝印和彩色丝印之分，丝印就是在电路板表面可以看到的标志，图片或文字。 嘉立创每月两次的免费PCB打样只支持黑白丝印，而彩色丝印需要额外50元活或者这张优惠卷 作品展示 彩色丝印卷可以在一些活动中获得，关注嘉立创eda公众号时刻关注。 三、正式教程那么现在正式开始教大家白嫖 1.进入 -下载客户端-选择适配自己电脑系统的文件下载（嘉立创EDA专业版）https://pro.lceda.cn/这个是嘉立创EDA的下载网站，嘉立创EDA是电路板的绘制工具 2.下载下单助手https://www.jlc.com/portal/appDownloadsWithConfig.html https://oshwhub.com/（这个是立创开源平台的网址，在这个上面你可以看到很多大佬开源的作品（电脑，手机，投影仪，牙刷，手表，机器人等） 这里输入梵高（要登录) 3.搜索后，页面跳转，点击第一个 4.点击编辑器打开 5.点击PCB(可能有点慢，需要等待) 6.点击导出PCB制板文件 7.导出Gerber文件会自动下载到你的Downloads中，你可以在此电脑–Downloads中找到 8点开嘉立创下单助手（刚刚下的软件) 9.领取一张：1-4层喷锡EDA专用券点击用户中心–优惠卷中心–免费卷领取 10.选择优惠卷 11.配置 板子数量选5 填写工艺 发票处不需要写，地址和联系方式填写自己的（成都理工大学）下单–支付 支付金额是0元 12.可以查看订单信息 四、结语期间需要选择路径，解压缩，注册账号等操作，如有不会，可以在群里询问请教学长学姐","path":"2024/09/08/嘉立创免费打板教程/","date":"09-08","excerpt":"","tags":[]},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","path":"2024/09/06/hello-world/","date":"09-06","excerpt":"","tags":[]}],"categories":[],"tags":[]}